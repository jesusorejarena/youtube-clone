version: '3'

services:
  postgres:
    image: postgres
    restart: always
    tty: true
    container_name: postgres
    hostname: host.docker.internal
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      DATABASE_HOST: 127.0.0.1
      POSTGRES_DB: youtube-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 1s
      timeout: 5s
      retries: 10
    # networks:
    #   - node-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '80:80'
    depends_on:
      - postgres

  backend:
    build:
      context: backend
    container_name: backend
    working_dir: /usr/src/app/backend
    networks:
      - node-network
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules
    tty: true
    ports:
      - '3000:3000'
    command: npm run start
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: frontend
    container_name: frontend
    working_dir: /usr/src/app
    networks:
      - node-network
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports:
      - '5173:5173'
    command: npm run dev

  nginx:
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - '8000:80'
    networks:
      - node-network
    depends_on:
      - backend
      - frontend

networks:
  node-network:
    driver: bridge
